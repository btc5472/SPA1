{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/parent-ss-details/parent-ss-details.component.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/fetch-data/fetch-data.component.html","./src/app/counter/counter.component.ts","./src/app/counter/counter.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/planets-of-ss/planets-of-ss.component.ts","./src/app/planets-of-ss/planets-of-ss.component.html","./src/app/solar-systems.service.ts","./src/app/exoplanets/exoplanets.component.ts","./src/app/exoplanets/exoplanets.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/solar-systems/solar-systems.component.ts","./src/app/solar-systems/solar-systems.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OktaAuthService } from '@okta/okta-angular';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\n\r\nexport class HomeComponent {\r\n  userName: string;\r\n  isAuthenticated: boolean;\r\n  error: Error;\r\n\r\n  constructor(public oktaAuth: OktaAuthService, public router: Router) {\r\n    // Subscribe to authentication state changes\r\n    this.oktaAuth.$authenticationState.subscribe(\r\n      (isAuthenticated: boolean) => this.isAuthenticated = isAuthenticated\r\n    );\r\n  }\r\n\r\n  async login() {\r\n    try {\r\n      await this.oktaAuth.signInWithRedirect();\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.error = err;\r\n    }\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // Get the authentication state for immediate use\r\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\r\n    if (this.isAuthenticated) {\r\n      const userClaims = await this.oktaAuth.getUser();\r\n      this.userName = userClaims.name;\r\n    }\r\n  }\r\n\r\n}\r\n","<h1>This is my Hompage!</h1>\r\n<p>There will be a database of solar systems and their exoplanets. </p>\r\n<p>There are many solar systems that exist and each one may or may not have any number of exoplanets.</p>\r\n<button *ngIf=\"!isAuthenticated\" (click)=\"login()\"> Login </button>\r\n<button *ngIf=\"isAuthenticated\" (click)=\"logout()\"> Logout </button>\r\n<ul>\r\n  <li>Many solar systems exist in our galaxy</li>\r\n  <li>Any solar system can have any number of exoplanets</li>\r\n</ul>\r\n\r\n<!--<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>-->\r\n<!--<h2>HTML Image</h2>\r\n<img src=\"exoplanetpic.jpg\" alt=\"Exoplanet\" width=\"500\" height=\"333\">-->\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parent-ss-details',\n  templateUrl: './parent-ss-details.component.html',\n  styleUrls: ['./parent-ss-details.component.css']\n})\nexport class ParentSsDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\n\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Brandons Modified Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p>Another pargraph.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav\r\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n  >\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Brandon Cobb's  WebApplication5</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\"\r\n        [attr.aria-expanded]=\"isExpanded\"\r\n        (click)=\"toggle()\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n        [ngClass]=\"{ show: isExpanded }\"\r\n      >\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/solar-systems']\">Solar Systems</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/exoplanets']\">Exoplanets</a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\r\n          </li>\r\n\r\n          <!--\r\n  <button *ngIf=\"!isAuthenticated\" (click)=\"login()\">Login</button>\r\n  <button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n    -->\r\n\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OktaAuthService } from '@okta/okta-angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'app';\r\n  isAuthenticated: boolean;\r\n  error: Error;\r\n\r\n  constructor(public oktaAuth: OktaAuthService, public router: Router) {\r\n    // Subscribe to authentication state changes\r\n    this.oktaAuth.$authenticationState.subscribe(\r\n      (isAuthenticated: boolean) => this.isAuthenticated = isAuthenticated\r\n    );\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\r\n  }\r\n\r\n  login() {\r\n    this.oktaAuth.signInWithRedirect();\r\n  }\r\n\r\n  logout() {\r\n    this.oktaAuth.signOut();\r\n  }\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n\r\n  <div class=\"ui container\">\r\n    <a class=\"item\" *ngIf=\"!isAuthenticated\" (click)=\"login()\">Login</a>\r\n    <a id=\"logout-button\" class=\"item\" *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</a>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OKTA_CONFIG, OktaAuthModule, OktaCallbackComponent, OktaAuthGuard, } from '@okta/okta-angular';\r\nimport { OktaLoginRedirectComponent } from '@okta/okta-angular';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { SolarSystemsComponent } from './solar-systems/solar-systems.component';\r\nimport { ExoplanetsComponent } from './exoplanets/exoplanets.component';\r\nimport { LoginComponent } from './login/login.component';\nimport { ParentSsDetailsComponent } from './parent-ss-details/parent-ss-details.component';\nimport { PlanetsOfSsComponent } from './planets-of-ss/planets-of-ss.component';\r\n\r\n/*const CALLBACK_PATH = 'login/callback';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: CALLBACK_PATH,\r\n    component: OktaCallbackComponent,\r\n    // Later: Add a component\r\n  },\r\n  {\r\n    path: 'exoplanets',\r\n    component: ExoplanetsComponent,\r\n    canActivate: [ OktaAuthGuard ],\r\n  },\r\n  // Other routes...\r\n];*/\r\n\r\nconst config = {\r\n  clientId: '{0oa29u625Xdq0LIAk5d6}',\r\n  issuer: 'https://${https://dev-9662063.okta.com}/oauth2/default',\r\n  redirectUri: 'https://localhost:44302/login/callback',\r\n  scopes: ['openid', 'profile', 'email'],\r\n  pkce: true\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    SolarSystemsComponent,\r\n    ExoplanetsComponent,\r\n    LoginComponent,\r\n    ParentSsDetailsComponent,\r\n    PlanetsOfSsComponent\r\n    //OktaCallbackComponent // Commenting this line out makes it so my homepage loads without \"Loading...\"\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    OktaAuthModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'login/callback', component: OktaCallbackComponent },\r\n      { path: 'login', component: /*OktaLoginRedirectComponent*/ LoginComponent },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      { path: 'solar-systems', component: SolarSystemsComponent },\r\n      { path: 'exoplanets', component: ExoplanetsComponent }\r\n      //{ path: '**', redirectTo: '' }\r\n    ])\r\n  ],\r\n  providers: [\r\n    { provide: OKTA_CONFIG, useValue: config }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SolarSystemsService } from '../solar-systems.service';\r\n\n@Component({\n  selector: 'app-planets-of-ss',\n  templateUrl: './planets-of-ss.component.html',\n  styleUrls: ['./planets-of-ss.component.css']\n})\nexport class PlanetsOfSsComponent implements OnInit {\n  //public ssWithPlanets = [];\n  solarSystemId: number;\n\n  constructor(private ssData: SolarSystemsService) { }\n\n  ngOnInit(): void {\n    this.ssData.getCurrentId().subscribe(currentId => this.solarSystemId = currentId);\n  }\n}\n/*\n------------------------------------------------------------------------------\nexport class AuthorWithBooksComponent implements OnInit {\n\n  public authorWithBooks = [];\n  authorId: number;\n\n  constructor(public _sharedService: AuthorsService, private http: HttpClient, public _authorwithbooksService: AuthorwithbooksService) { }\n\n\n  ngOnInit(): void {\n    this._sharedService.getSelectedId().subscribe((selectedId) => { console.log(selectedId); this.authorId = selectedId });\n    console.log(this.authorId);\n    console.log(\"using authorwithbooksservice\");\n\n    this._authorwithbooksService.getAuthorWithBooks(this.authorId).subscribe(data => this.authorWithBooks = data);\n  }\n\n}\n*/\n","\r\n<h1 id=\"tableLabel\">Planets of this Solar System</h1>\r\n<!--\r\n<p *ngIf=\"!SSWithPlanets\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"SSWithPlanets\">\r\n  <thead>\r\n    <tr>\r\n      <th>Solar System</th>\r\n      <th>Planet</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <ng-container *ngFor=\"let SSWithPlanet of SSWithPlanets\">\r\n      <tr *ngFor=\"let planetName of SSWithPlanet.planetList\">\r\n      </tr>\r\n    </ng-container>\r\n  </tbody>\r\n</table>\r\n<a routerLink=\"/solar-systems\"> Go back to Solar Systems </a>\r\n\r\n-->\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolarSystemsService {\n  public currentId = new BehaviorSubject<number>(1);\n\n  constructor(private http: HttpClient) { }\n\n  getCurrentId() {\n    return this.currentId.asObservable();\r\n  }\n\n  changeCurrentId(id: number) {\n    this.currentId.next(id);\r\n  }\n\n  getSolarSystems(): Observable<SolarSystemIFService[]> {\n    return this.http.get<SolarSystemIFService[]>('api/SolarSystem');\r\n  }\n}\n\ninterface SolarSystemIFService {\n  solarSystemId: number;\r\n  solarSystemName: string;\r\n}\n","//import { Component, OnInit } from '@Angular/core';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-exoplanets',\r\n    templateUrl: './exoplanets.component.html'\r\n})\r\n\r\nexport class ExoplanetsComponent {\r\n  public exoplanets: ExoplanetsIF[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<ExoplanetsIF[]>(baseUrl + 'api/Exoplanets').subscribe(result => {\r\n      this.exoplanets = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface ExoplanetsIF {\r\n  exoplanetId: number;\r\n  name: string\r\n  numMoons: number;\r\n  life: boolean;\r\n  solarSystemId: number;\r\n}\r\n","<h1 id=\"tableLabel\">Exoplanets</h1>\r\n\r\n<p>These are some of the known exoplanets</p>\r\n\r\n<p *ngIf=\"!exoplanets\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"exoplanets\">\r\n  <thead>\r\n    <tr>\r\n      <th>Exoplanet ID</th>\r\n      <th>Name</th>\r\n      <th># of Moons</th>\r\n      <th>Life</th>\r\n      <th>Parent Solar System ID</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let exoplanet of exoplanets\">\r\n      <td>{{ exoplanet.exoplanetId }}</td>\r\n      <td>{{ exoplanet.name }}</td>\r\n      <td>{{ exoplanet.numMoons }}</td>\r\n      <td>{{ exoplanet.life }}</td>\r\n      <td>{{ exoplanet.solarSystemId }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\r\n<div id=\"okta-signin-container\"></div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-solar-systems',\r\n  templateUrl: './solar-systems.component.html'\r\n})\r\n\r\nexport class SolarSystemsComponent {\r\n  public solarSystems: SolarSystemIF[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<SolarSystemIF[]>(baseUrl + 'api/SolarSystems').subscribe(result => {\r\n      this.solarSystems = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface SolarSystemIF {\r\n  solarSystemId: number;\r\n  name: string;\r\n  binaryStars: boolean;\r\n  numPlanets: number;\r\n  //life: boolean;\r\n}\r\n","<h1 id=\"tableLabel\">Solar Systems</h1>\r\n\r\n<p>Known Solar Systems in our Milky Way Galaxy</p>\r\n\r\n<p *ngIf=\"!solarSystems\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"solarSystems\">\r\n  <thead>\r\n    <tr>\r\n      <th>Solar System ID</th>\r\n      <th>Name</th>\r\n      <th>Binary System</th>\r\n      <th># of Planets</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let solarSystem of solarSystems\">\r\n      <td>{{ solarSystem.solarSystemId }}</td>\r\n      <td>{{ solarSystem.name }}</td>\r\n      <td>{{ solarSystem.binaryStars }}</td>\r\n      <td>{{ solarSystem.numPlanets }}</td>\r\n      <td><a (click)=\"newId(solarSystem.solarSystemId)\" [routerLink]=\"['/planets-of-ss', solarSystem.solarSystemId]\">View Planets</a></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"],"sourceRoot":"webpack:///"}