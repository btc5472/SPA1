{"version":3,"sources":["webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/parent-ss-details/parent-ss-details.component.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/counter/counter.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/planets-of-ss/planets-of-ss.component.ts","webpack:///src/app/planets-of-ss/planets-of-ss.component.html","webpack:///src/app/solar-systems.service.ts","webpack:///src/app/exoplanets/exoplanets.component.ts","webpack:///src/app/exoplanets/exoplanets.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///src/app/solar-systems/solar-systems.component.ts","webpack:///src/app/solar-systems/solar-systems.component.html"],"names":["HomeComponent","oktaAuth","router","$authenticationState","subscribe","isAuthenticated","signInWithRedirect","console","error","getUser","userClaims","userName","name","selector","templateUrl","environment","production","ParentSsDetailsComponent","styleUrls","FetchDataComponent","http","baseUrl","get","result","forecasts","CounterComponent","currentCount","incrementCounter","NavMenuComponent","isExpanded","toggle","AppComponent","title","signOut","config","clientId","issuer","redirectUri","scopes","pkce","AppModule","provide","useValue","withServerTransition","appId","forRoot","path","component","pathMatch","declarations","imports","providers","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","PlanetsOfSsComponent","ssData","getCurrentId","currentId","solarSystemId","SolarSystemsService","asObservable","next","providedIn","ExoplanetsComponent","exoplanets","LoginComponent","getBaseUrl","document","getElementsByTagName","href","useFactory","deps","bootstrapModule","err","log","SolarSystemsComponent","solarSystems"],"mappings":"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","file":"main-es5.js","sourcesContent":["<h1>This is my Hompage!</h1>\r\n<p>There will be a database of solar systems and their exoplanets. </p>\r\n<p>There are many solar systems that exist and each one may or may not have any number of exoplanets.</p>\r\n<button *ngIf=\"!isAuthenticated\" (click)=\"login()\"> Login </button>\r\n<button *ngIf=\"isAuthenticated\" (click)=\"logout()\"> Logout </button>\r\n<ul>\r\n  <li>Many solar systems exist in our galaxy</li>\r\n  <li>Any solar system can have any number of exoplanets</li>\r\n</ul>\r\n\r\n<!--<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>-->\r\n<!--<h2>HTML Image</h2>\r\n<img src=\"exoplanetpic.jpg\" alt=\"Exoplanet\" width=\"500\" height=\"333\">-->\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OktaAuthService } from '@okta/okta-angular';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\n\r\nexport class HomeComponent {\r\n  userName: string;\r\n  isAuthenticated: boolean;\r\n  error: Error;\r\n\r\n  constructor(public oktaAuth: OktaAuthService, public router: Router) {\r\n    // Subscribe to authentication state changes\r\n    this.oktaAuth.$authenticationState.subscribe(\r\n      (isAuthenticated: boolean) => this.isAuthenticated = isAuthenticated\r\n    );\r\n  }\r\n\r\n  async login() {\r\n    try {\r\n      await this.oktaAuth.signInWithRedirect();\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.error = err;\r\n    }\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // Get the authentication state for immediate use\r\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\r\n    if (this.isAuthenticated) {\r\n      const userClaims = await this.oktaAuth.getUser();\r\n      this.userName = userClaims.name;\r\n    }\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parent-ss-details',\n  templateUrl: './parent-ss-details.component.html',\n  styleUrls: ['./parent-ss-details.component.css']\n})\nexport class ParentSsDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\n\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Brandons Modified Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p>Another pargraph.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav\r\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n  >\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Brandon Cobb's  WebApplication5</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\"\r\n        [attr.aria-expanded]=\"isExpanded\"\r\n        (click)=\"toggle()\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n        [ngClass]=\"{ show: isExpanded }\"\r\n      >\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/solar-systems']\">Solar Systems</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/exoplanets']\">Exoplanets</a>\r\n          </li>\r\n\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Login</a>\r\n          </li>\r\n\r\n          <!--\r\n  <button *ngIf=\"!isAuthenticated\" (click)=\"login()\">Login</button>\r\n  <button *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</button>\r\n    -->\r\n\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n\r\n  <div class=\"ui container\">\r\n    <a class=\"item\" *ngIf=\"!isAuthenticated\" (click)=\"login()\">Login</a>\r\n    <a id=\"logout-button\" class=\"item\" *ngIf=\"isAuthenticated\" (click)=\"logout()\">Logout</a>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OktaAuthService } from '@okta/okta-angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'app';\r\n  isAuthenticated: boolean;\r\n  error: Error;\r\n\r\n  constructor(public oktaAuth: OktaAuthService, public router: Router) {\r\n    // Subscribe to authentication state changes\r\n    this.oktaAuth.$authenticationState.subscribe(\r\n      (isAuthenticated: boolean) => this.isAuthenticated = isAuthenticated\r\n    );\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.isAuthenticated = await this.oktaAuth.isAuthenticated();\r\n  }\r\n\r\n  login() {\r\n    this.oktaAuth.signInWithRedirect();\r\n  }\r\n\r\n  logout() {\r\n    this.oktaAuth.signOut();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OKTA_CONFIG, OktaAuthModule, OktaCallbackComponent, OktaAuthGuard, } from '@okta/okta-angular';\r\nimport { OktaLoginRedirectComponent } from '@okta/okta-angular';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { SolarSystemsComponent } from './solar-systems/solar-systems.component';\r\nimport { ExoplanetsComponent } from './exoplanets/exoplanets.component';\r\nimport { LoginComponent } from './login/login.component';\nimport { ParentSsDetailsComponent } from './parent-ss-details/parent-ss-details.component';\nimport { PlanetsOfSsComponent } from './planets-of-ss/planets-of-ss.component';\r\n\r\n/*const CALLBACK_PATH = 'login/callback';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: CALLBACK_PATH,\r\n    component: OktaCallbackComponent,\r\n    // Later: Add a component\r\n  },\r\n  {\r\n    path: 'exoplanets',\r\n    component: ExoplanetsComponent,\r\n    canActivate: [ OktaAuthGuard ],\r\n  },\r\n  // Other routes...\r\n];*/\r\n\r\nconst config = {\r\n  clientId: '{0oa29u625Xdq0LIAk5d6}',\r\n  issuer: 'https://${https://dev-9662063.okta.com}/oauth2/default',\r\n  redirectUri: 'https://localhost:44302/login/callback',\r\n  scopes: ['openid', 'profile', 'email'],\r\n  pkce: true\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    SolarSystemsComponent,\r\n    ExoplanetsComponent,\r\n    LoginComponent,\r\n    ParentSsDetailsComponent,\r\n    PlanetsOfSsComponent\r\n    //OktaCallbackComponent // Commenting this line out makes it so my homepage loads without \"Loading...\"\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    OktaAuthModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'login/callback', component: OktaCallbackComponent },\r\n      { path: 'login', component: /*OktaLoginRedirectComponent*/ LoginComponent },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      { path: 'solar-systems', component: SolarSystemsComponent },\r\n      { path: 'exoplanets', component: ExoplanetsComponent }\r\n      //{ path: '**', redirectTo: '' }\r\n    ])\r\n  ],\r\n  providers: [\r\n    { provide: OKTA_CONFIG, useValue: config }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SolarSystemsService } from '../solar-systems.service';\r\n\n@Component({\n  selector: 'app-planets-of-ss',\n  templateUrl: './planets-of-ss.component.html',\n  styleUrls: ['./planets-of-ss.component.css']\n})\nexport class PlanetsOfSsComponent implements OnInit {\n  //public ssWithPlanets = [];\n  solarSystemId: number;\n\n  constructor(private ssData: SolarSystemsService) { }\n\n  ngOnInit(): void {\n    this.ssData.getCurrentId().subscribe(currentId => this.solarSystemId = currentId);\n  }\n}\n/*\n------------------------------------------------------------------------------\nexport class AuthorWithBooksComponent implements OnInit {\n\n  public authorWithBooks = [];\n  authorId: number;\n\n  constructor(public _sharedService: AuthorsService, private http: HttpClient, public _authorwithbooksService: AuthorwithbooksService) { }\n\n\n  ngOnInit(): void {\n    this._sharedService.getSelectedId().subscribe((selectedId) => { console.log(selectedId); this.authorId = selectedId });\n    console.log(this.authorId);\n    console.log(\"using authorwithbooksservice\");\n\n    this._authorwithbooksService.getAuthorWithBooks(this.authorId).subscribe(data => this.authorWithBooks = data);\n  }\n\n}\n*/\n","\r\n<h1 id=\"tableLabel\">Planets of this Solar System</h1>\r\n<!--\r\n<p *ngIf=\"!SSWithPlanets\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"SSWithPlanets\">\r\n  <thead>\r\n    <tr>\r\n      <th>Solar System</th>\r\n      <th>Planet</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <ng-container *ngFor=\"let SSWithPlanet of SSWithPlanets\">\r\n      <tr *ngFor=\"let planetName of SSWithPlanet.planetList\">\r\n      </tr>\r\n    </ng-container>\r\n  </tbody>\r\n</table>\r\n<a routerLink=\"/solar-systems\"> Go back to Solar Systems </a>\r\n\r\n-->\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolarSystemsService {\n  public currentId = new BehaviorSubject<number>(1);\n\n  constructor(private http: HttpClient) { }\n\n  getCurrentId() {\n    return this.currentId.asObservable();\r\n  }\n\n  changeCurrentId(id: number) {\n    this.currentId.next(id);\r\n  }\n\n  getSolarSystems(): Observable<SolarSystemIFService[]> {\n    return this.http.get<SolarSystemIFService[]>('api/SolarSystem');\r\n  }\n}\n\ninterface SolarSystemIFService {\n  solarSystemId: number;\r\n  solarSystemName: string;\r\n}\n","//import { Component, OnInit } from '@Angular/core';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-exoplanets',\r\n    templateUrl: './exoplanets.component.html'\r\n})\r\n\r\nexport class ExoplanetsComponent {\r\n  public exoplanets: ExoplanetsIF[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<ExoplanetsIF[]>(baseUrl + 'api/Exoplanets').subscribe(result => {\r\n      this.exoplanets = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface ExoplanetsIF {\r\n  exoplanetId: number;\r\n  name: string\r\n  numMoons: number;\r\n  life: boolean;\r\n  solarSystemId: number;\r\n}\r\n","<h1 id=\"tableLabel\">Exoplanets</h1>\r\n\r\n<p>These are some of the known exoplanets</p>\r\n\r\n<p *ngIf=\"!exoplanets\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"exoplanets\">\r\n  <thead>\r\n    <tr>\r\n      <th>Exoplanet ID</th>\r\n      <th>Name</th>\r\n      <th># of Moons</th>\r\n      <th>Life</th>\r\n      <th>Parent Solar System ID</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let exoplanet of exoplanets\">\r\n      <td>{{ exoplanet.exoplanetId }}</td>\r\n      <td>{{ exoplanet.name }}</td>\r\n      <td>{{ exoplanet.numMoons }}</td>\r\n      <td>{{ exoplanet.life }}</td>\r\n      <td>{{ exoplanet.solarSystemId }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\r\n<div id=\"okta-signin-container\"></div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-solar-systems',\r\n  templateUrl: './solar-systems.component.html'\r\n})\r\n\r\nexport class SolarSystemsComponent {\r\n  public solarSystems: SolarSystemIF[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<SolarSystemIF[]>(baseUrl + 'api/SolarSystems').subscribe(result => {\r\n      this.solarSystems = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface SolarSystemIF {\r\n  solarSystemId: number;\r\n  name: string;\r\n  binaryStars: boolean;\r\n  numPlanets: number;\r\n  //life: boolean;\r\n}\r\n","<h1 id=\"tableLabel\">Solar Systems</h1>\r\n\r\n<p>Known Solar Systems in our Milky Way Galaxy</p>\r\n\r\n<p *ngIf=\"!solarSystems\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"solarSystems\">\r\n  <thead>\r\n    <tr>\r\n      <th>Solar System ID</th>\r\n      <th>Name</th>\r\n      <th>Binary System</th>\r\n      <th># of Planets</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let solarSystem of solarSystems\">\r\n      <td>{{ solarSystem.solarSystemId }}</td>\r\n      <td>{{ solarSystem.name }}</td>\r\n      <td>{{ solarSystem.binaryStars }}</td>\r\n      <td>{{ solarSystem.numPlanets }}</td>\r\n      <td><a (click)=\"newId(solarSystem.solarSystemId)\" [routerLink]=\"['/planets-of-ss', solarSystem.solarSystemId]\">View Planets</a></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]}